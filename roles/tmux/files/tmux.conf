# Use ctrl-j instead of ctrl-b
set -g prefix C-j
unbind C-b

#setting the delay between prefix and command
set -s escape-time 5

# Bind a to go to beginning of line (ctrl-a expected behaviour)
bind C-j send-prefix

# Set vi as the default editor
set -g status-keys vi

# Open ~/.tmux.conf in vim and reload settings on quit
unbind e
bind e new-window -n '~/.tmux.conf' "sh -c 'nvim ~/.tmux.conf && tmux source ~/.tmux.conf'"

# Set bind key to reload configuration file
bind-key r source-file ~/.tmux.conf \; display-message ‚Äã"tmux.conf Reloaded!"

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
# Set the base index for panes to 1 instead of 0
set -g pane-base-index 1
#set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Double press <prefix> to move to last window
bind-key C-j last-window

# more history limit
set -g history-limit 20000000

# Clear screen and scrollback
bind-key L clear-history
#bind -n C-k send-keys -R \; clear-history

# use VI keys
set-window-option -g mode-keys vi

# Lengthen the amount of time status messages are displayed
set-option -g display-time 2000
set-option -g display-panes-time 3000

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# horizontal and vertical splits
bind-key v split-window -h
bind-key h split-window -v

# split window vertically 75/25
unbind ^T
bind ^T split-window -p 25

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind-key space next-window
bind-key t next-window
bind-key bspace previous-window
bind-key T previous-window
bind-key enter next-layout
bind-key a last-pane
bind-key q display-panes
bind-key c new-window

# Rotate through the windows
bind-key C-o rotate-window

# cycle through panes
unbind ^A
bind ^A select-pane -t :.+

# Allow the arrow key to be used immediately after changing windows.
set-option -g repeat-time 0

# window resize
set-window-option -g aggressive-resize on

# tile all panes
unbind =
bind = select-layout tiled

# resize panes
unbind Right
bind Right resize-pane -R 8
unbind Left
bind Left resize-pane -L 8
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# kill window asking for confirmatioin
unbind ^k
bind k confirm-before "kill-window"

# kill pane
unbind ^x
bind ^x kill-pane

# Synchronize panes
bind-key s set-window-option synchronize-panes

# No delay for escape key press
set -sg escape-time 0

# Mouse Mode
set -g mouse on

# Copy mode
unbind [
bind Escape copy-mode
# Key bindings for copy-paste
setw -g mode-keys vi
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Clunkily connect tmux buffers with the pasteboard.
# from: https://github.com/square/maximum-awesome/blob/master/tmux.conf
#bind-key y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind-key y run "tmux save-buffer - | reattach-to-user-namespace 'xclip -se c -i'"

# Use the OS X pasteboard hack if available
# Got trick from https://github.com/ches/dotfiles/blob/master/.tmux.conf
# Consider also: https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/issues/8
# if 'command -v reattach-to-user-namespace >/dev/null' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL; cd ."'
set-option -g default-command "/bin/zsh -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

set -g default-terminal "screen-256color"

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

set-option -g status "on"

# Default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-left "\
#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour167],} ‚ùê #S \
#[fg=colour241, bg=colour237]#{?client_prefix,#[fg=colour167],}ÓÇ∞#{?window_zoomed_flag, üîç,}"

set-option -g status-right "\
#[fg=colour214, bg=colour237] ÓÇ≤\
#[fg=colour237, bg=colour214] #(~/dotfiles/tmux_scripts/music.sh) ÓÇ≤\
#[fg=colour223, bg=colour237] #(~/dotfiles/tmux_scripts/uptime.sh) \
#[fg=colour246, bg=colour237] ÓÇ≥ %b %d '%y\
#[fg=colour109] ÓÇ≥ %H:%M \
#[fg=colour248, bg=colour239]"

set-window-option -g window-status-current-format "\
#[fg=colour237, bg=colour214]ÓÇ∞\
#[fg=colour239, bg=colour214] #I* ÓÇ±\
#[fg=colour239, bg=colour214, bold] #W \
#[fg=colour214, bg=colour237]ÓÇ∞"

set-window-option -g window-status-format "\
#[fg=colour237,bg=colour239,noitalics]ÓÇ∞\
#[fg=colour223,bg=colour239] #I ÓÇ±\
#[fg=colour223, bg=colour239] #W \
#[fg=colour239, bg=colour237]ÓÇ∞"
